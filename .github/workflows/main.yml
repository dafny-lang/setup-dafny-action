name: Validate action
on:
  push:
    branches:
      - main
  pull_request:
    branches: 
      - main

jobs:
  setup-dafny:
    name: Install Dafny
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        dafny: [3.8.1, 3.13.1, 4.0.0, 4.9.1, nightly-2023-02-28-80a0e49, nightly-latest]
        include:
          # Test building from source from a subset of versions
          - dafny: 4.0.0
            build-from-source: v4.0.0
          - dafny: 4.9.0
            build-from-source: v4.9.0
        
    steps:
      # The first call to `dotnet tool` on a fresh runner sometimes takes multiple minutes,
      # perhaps because it is lazily downloading and installing assets.
      # It helps to hit that here so we don't hit it in a mocha test with a tight timeout.
      - name: Warm up dotnet tool
        run: dotnet tool search --help

      - name: Checkout
        uses: actions/checkout@v2

      - name: setup-dafny-action ${{ matrix.dafny }}
        uses: ./
        with:
          dafny-version: ${{ matrix.dafny }}
          build-from-source: ${{ matrix.build-from-source }}

      - name: verify dafny
        shell: bash
        run: __tests__/verify-dafny.sh ${{ matrix.dafny }}

      - name: verify something with dafny
        if: ${{ !(matrix.dafny != '2.3.0' && matrix.dafny != '3.0.0') }}
        shell: bash
        run: dafny /compile:0 __tests__/test.dfy

      - name: verify something with dafny (with verification logging)
        if: matrix.dafny != '2.3.0' && matrix.dafny != '3.0.0'
        shell: bash
        run: dafny /compile:0 __tests__/test.dfy /verificationLogger:csv

      - name: Run the reportgenerator
        shell: bash
        # This will find no results if we didn't run with verification logging on above
        run: dafny-reportgenerator summarize-csv-results --max-resource-count 900000 .

  unit-tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm test

  all-required:
    if: always()
    needs:
      - setup-dafny
      - unit-tests
    runs-on: ubuntu-22.04
    steps:
      - name: Verify all required jobs passed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
